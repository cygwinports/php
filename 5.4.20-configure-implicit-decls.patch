--- origsrc/php-5.4.20/Zend/Zend.m4	2013-09-18 00:48:57.000000000 -0500
+++ src/php-5.4.20/Zend/Zend.m4	2013-10-17 14:48:39.055779300 -0500
@@ -111,6 +111,7 @@ AC_MSG_CHECKING(whether double cast to l
 
 AC_TRY_RUN([
 #include <limits.h>
+#include <stdlib.h>
 
 int main()
 {
@@ -248,6 +249,7 @@ AC_MSG_CHECKING(for MM alignment and log
 
 AC_TRY_RUN([
 #include <stdio.h>
+#include <stdlib.h>
 
 typedef union _mm_align_test {
   void *ptr;
@@ -345,6 +347,7 @@ AC_TRY_RUN([
 #include <sys/mman.h>
 #include <stdlib.h>
 #include <stdio.h>
+#include <unistd.h>
 #ifndef MAP_ANON
 # ifdef MAP_ANONYMOUS
 #  define MAP_ANON MAP_ANONYMOUS
--- origsrc/php-5.4.20/Zend/acinclude.m4	2013-09-18 00:48:57.000000000 -0500
+++ src/php-5.4.20/Zend/acinclude.m4	2013-10-17 15:07:24.338141800 -0500
@@ -58,7 +58,11 @@ dnl Check for broken sprintf()
 dnl
 AC_DEFUN([AC_ZEND_BROKEN_SPRINTF],[
   AC_CACHE_CHECK(whether sprintf is broken, ac_cv_broken_sprintf,[
-    AC_TRY_RUN([main() {char buf[20];exit(sprintf(buf,"testing 123")!=11); }],[
+    AC_TRY_RUN([
+#include <stdio.h>
+#include <stdlib.h>
+main() { char buf[20];exit(sprintf(buf,"testing 123")!=11); }
+    ],[
       ac_cv_broken_sprintf=no
     ],[
       ac_cv_broken_sprintf=yes
--- origsrc/php-5.4.20/acinclude.m4	2013-10-17 14:23:56.236967000 -0500
+++ src/php-5.4.20/acinclude.m4	2013-10-17 15:07:41.180105100 -0500
@@ -1225,6 +1225,7 @@ AC_DEFUN([PHP_DOES_PWRITE_WORK],[
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
+#include <stdlib.h>
 #include <unistd.h>
 #include <errno.h>
 $1
@@ -1255,6 +1256,7 @@ AC_DEFUN([PHP_DOES_PREAD_WORK],[
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
+#include <stdlib.h>
 #include <unistd.h>
 #include <errno.h>
 $1
@@ -1366,6 +1368,7 @@ AC_DEFUN([PHP_READDIR_R_TYPE],[
 #define _REENTRANT
 #include <sys/types.h>
 #include <dirent.h>
+#include <stdlib.h>
 
 #ifndef PATH_MAX
 #define PATH_MAX 1024
@@ -1487,7 +1490,11 @@ dnl Check for broken sprintf(), C99 conf
 dnl
 AC_DEFUN([PHP_AC_BROKEN_SPRINTF],[
   AC_CACHE_CHECK(whether sprintf is broken, ac_cv_broken_sprintf,[
-    AC_TRY_RUN([main() {char buf[20];exit(sprintf(buf,"testing 123")!=11); }],[
+    AC_TRY_RUN([
+#include <stdio.h>
+#include <string.h>
+main() {char buf[20];exit(sprintf(buf,"testing 123")!=11); }
+    ],[
       ac_cv_broken_sprintf=no
     ],[
       ac_cv_broken_sprintf=yes
@@ -1711,6 +1718,8 @@ AC_DEFUN([PHP_BROKEN_GLIBC_FOPEN_APPEND]
   AC_CACHE_VAL(_cv_have_broken_glibc_fopen_append,[
   AC_TRY_RUN([
 #include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
 int main(int argc, char *argv[])
 {
   FILE *fp;
@@ -1778,6 +1787,7 @@ dnl even newer glibcs have a different s
 AC_TRY_RUN([
 #define _GNU_SOURCE
 #include <stdio.h>
+#include <stdlib.h>
 
 struct cookiedata {
   __off64_t pos;
@@ -2651,6 +2661,7 @@ uname -a:   `uname -a`
 
 X
     cat >conftest.$ac_ext <<X
+#include <stdlib.h>
 main()
 {
   exit(0);
--- origsrc/php-5.4.20/configure.in	2013-10-17 14:23:57.955065200 -0500
+++ src/php-5.4.20/configure.in	2013-10-17 15:05:08.743386200 -0500
@@ -703,6 +703,8 @@ AC_CACHE_CHECK([for getaddrinfo], ac_cv_
                 [struct addrinfo *g,h;g=&h;getaddrinfo("","",g,&g);], 
   AC_TRY_RUN([
 #include <netdb.h>
+#include <stdlib.h>
+#include <string.h>
 #include <sys/types.h>
 #ifndef AF_INET
 # include <sys/socket.h>
--- origsrc/php-5.4.20/ext/iconv/config.m4	2013-09-18 00:48:57.000000000 -0500
+++ src/php-5.4.20/ext/iconv/config.m4	2013-10-17 15:05:41.789276400 -0500
@@ -52,6 +52,7 @@ if test "$PHP_ICONV" != "no"; then
       LDFLAGS="-liconv $LDFLAGS"
       AC_TRY_RUN([
 #include <$PHP_ICONV_H_PATH>
+#include <stdio.h>
 int main() {
 	printf("%d", _libiconv_version);
 	return 0;
--- origsrc/php-5.4.20/ext/standard/config.m4	2013-09-18 00:48:57.000000000 -0500
+++ src/php-5.4.20/ext/standard/config.m4	2013-10-17 14:39:47.752390500 -0500
@@ -7,6 +7,8 @@ AC_CACHE_CHECK([whether flush should be
 AC_TRY_RUN( [
 #include <stdio.h>
 #include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
 
 int main(int argc, char **argv)
 {
@@ -61,6 +63,8 @@ fi
   
 AC_CACHE_CHECK(for standard DES crypt, ac_cv_crypt_des,[
   AC_TRY_RUN([
+#include <stdlib.h>
+#include <string.h>
 #if HAVE_UNISTD_H
 #include <unistd.h>
 #endif
@@ -85,6 +89,8 @@ main() {
 
 AC_CACHE_CHECK(for extended DES crypt, ac_cv_crypt_ext_des,[
   AC_TRY_RUN([
+#include <stdlib.h>
+#include <string.h>
 #if HAVE_UNISTD_H
 #include <unistd.h>
 #endif
@@ -109,6 +115,8 @@ main() {
 
 AC_CACHE_CHECK(for MD5 crypt, ac_cv_crypt_md5,[
 AC_TRY_RUN([
+#include <stdlib.h>
+#include <string.h>
 #if HAVE_UNISTD_H
 #include <unistd.h>
 #endif
@@ -142,6 +150,8 @@ main() {
 
 AC_CACHE_CHECK(for Blowfish crypt, ac_cv_crypt_blowfish,[
 AC_TRY_RUN([
+#include <stdlib.h>
+#include <string.h>
 #if HAVE_UNISTD_H
 #include <unistd.h>
 #endif
@@ -172,6 +182,8 @@ main() {
 
 AC_CACHE_CHECK(for SHA512 crypt, ac_cv_crypt_SHA512,[
 AC_TRY_RUN([
+#include <stdlib.h>
+#include <string.h>
 #if HAVE_UNISTD_H
 #include <unistd.h>
 #endif
@@ -201,6 +213,8 @@ main() {
 
 AC_CACHE_CHECK(for SHA256 crypt, ac_cv_crypt_SHA256,[
 AC_TRY_RUN([
+#include <stdlib.h>
+#include <string.h>
 #if HAVE_UNISTD_H
 #include <unistd.h>
 #endif
